# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:43:46+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Address(BaseModel):
    addressLine1: Optional[str] = Field(
        None,
        description="A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional.",
    )
    addressLine2: Optional[str] = Field(None, description='Line 2 of the address.')
    addressLine3: Optional[str] = Field(None, description='Line 3 of the address.')
    contactName: Optional[str] = Field(
        None, description="The customer contact's name. This is required."
    )
    countryCode: Optional[str] = Field(
        None,
        description='For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer.',
    )
    kind: Optional[str] = Field(
        'customers#address',
        description='Identifies the resource as a customer address. Value: `customers#address`',
    )
    locality: Optional[str] = Field(
        None,
        description='An example of a `locality` value is the city of `San Francisco`.',
    )
    organizationName: Optional[str] = Field(
        None, description='The company or company division name. This is required.'
    )
    postalCode: Optional[str] = Field(
        None,
        description='A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer.',
    )
    region: Optional[str] = Field(
        None,
        description='An example of a `region` value is `CA` for the state of California.',
    )


class CustomerType(Enum):
    customerTypeUnspecified = 'customerTypeUnspecified'
    domain = 'domain'
    team = 'team'


class PrimaryAdmin(BaseModel):
    primaryEmail: Optional[str] = Field(
        None,
        description="The business email of the primary administrator of the customer. The email verification link is sent to this email address at the time of customer creation. Primary administrators have access to the customer's Admin Console, including the ability to invite and evict users and manage the administrative needs of the customer.",
    )


class RenewalSettings(BaseModel):
    kind: Optional[str] = Field(
        'subscriptions#renewalSettings',
        description='Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`',
    )
    renewalType: Optional[str] = Field(
        None,
        description='Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property.',
    )


class ResellernotifyGetwatchdetailsResponse(BaseModel):
    serviceAccountEmailAddresses: Optional[List[str]] = Field(
        None, description='List of registered service accounts.'
    )
    topicName: Optional[str] = Field(None, description='Topic name of the PubSub')


class ResellernotifyResource(BaseModel):
    topicName: Optional[str] = Field(None, description='Topic name of the PubSub')


class Seats(BaseModel):
    kind: Optional[str] = Field(
        'subscriptions#seats',
        description='Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`',
    )
    licensedNumberOfSeats: Optional[int] = Field(
        None,
        description="Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku).",
    )
    maximumNumberOfSeats: Optional[int] = Field(
        None,
        description="This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user.",
    )
    numberOfSeats: Optional[int] = Field(
        None,
        description='This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *Google Workspace subscriptions automatically assign a license to every user.',
    )


class CommitmentInterval(BaseModel):
    endTime: Optional[str] = Field(
        None,
        description="An annual commitment plan's interval's `endTime` in milliseconds using the UNIX Epoch format. See an example Epoch converter.",
    )
    startTime: Optional[str] = Field(
        None,
        description="An annual commitment plan's interval's `startTime` in milliseconds using UNIX Epoch format. See an example Epoch converter.",
    )


class Plan(BaseModel):
    commitmentInterval: Optional[CommitmentInterval] = Field(
        None,
        description="In this version of the API, annual commitment plan's interval is one year. *Note: *When `billingMethod` value is `OFFLINE`, the subscription property object `plan.commitmentInterval` is omitted in all API responses. ",
    )
    isCommitmentPlan: Optional[bool] = Field(
        None,
        description="The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. ",
    )
    planName: Optional[str] = Field(
        None,
        description="The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. ",
    )


class TransferInfo(BaseModel):
    currentLegacySkuId: Optional[str] = Field(
        None,
        description='The `skuId` of the current resold subscription. This is populated only when the customer has a subscription with a legacy SKU and the subscription resource is populated with the `skuId` of the SKU recommended for the transfer.',
    )
    minimumTransferableSeats: Optional[int] = Field(
        None,
        description='When inserting a subscription, this is the minimum number of seats listed in the transfer order for this product. For example, if the customer has 20 users, the reseller cannot place a transfer order of 15 seats. The minimum is 20 seats.',
    )
    transferabilityExpirationTime: Optional[str] = Field(
        None,
        description='The time when transfer token or intent to transfer will expire. The time is in milliseconds using UNIX Epoch format.',
    )


class TrialSettings(BaseModel):
    isInTrial: Optional[bool] = Field(
        None,
        description="Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. ",
    )
    trialEndTime: Optional[str] = Field(
        None,
        description='Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter.',
    )


class Subscription(BaseModel):
    billingMethod: Optional[str] = Field(
        None,
        description='Read-only field that returns the current billing method for a subscription.',
    )
    creationTime: Optional[str] = Field(
        None,
        description='The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter.',
    )
    customerDomain: Optional[str] = Field(
        None, description='Primary domain name of the customer'
    )
    customerId: Optional[str] = Field(
        None,
        description='This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.',
    )
    dealCode: Optional[str] = Field(
        None,
        description='Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty.',
    )
    kind: Optional[str] = Field(
        'reseller#subscription',
        description='Identifies the resource as a Subscription. Value: `reseller#subscription`',
    )
    plan: Optional[Plan] = Field(
        None,
        description='The `plan` property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial plan. For more information about the API"s payment plans, see the API concepts.',
    )
    purchaseOrderId: Optional[str] = Field(
        None,
        description='This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.',
    )
    renewalSettings: Optional[RenewalSettings] = Field(
        None,
        description='Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center.',
    )
    resourceUiUrl: Optional[str] = Field(
        None,
        description="URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console.",
    )
    seats: Optional[Seats] = Field(
        None,
        description='This is a required property. The number and limit of user seat licenses in the plan.',
    )
    skuId: Optional[str] = Field(
        None,
        description="A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs.",
    )
    skuName: Optional[str] = Field(
        None,
        description="Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs.",
    )
    status: Optional[str] = Field(None, description='This is an optional property.')
    subscriptionId: Optional[str] = Field(
        None,
        description='The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions.',
    )
    suspensionReasons: Optional[List[str]] = Field(
        None,
        description="Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). ",
    )
    transferInfo: Optional[TransferInfo] = Field(
        None,
        description='Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer.',
    )
    trialSettings: Optional[TrialSettings] = Field(
        None,
        description='The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts.',
    )


class Subscriptions(BaseModel):
    kind: Optional[str] = Field(
        'reseller#subscriptions',
        description='Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions',
    )
    nextPageToken: Optional[str] = Field(
        None,
        description='The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.',
    )
    subscriptions: Optional[List[Subscription]] = Field(
        None, description='The subscriptions in this page of results.'
    )


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'


class DeletionType(Enum):
    deletion_type_undefined = 'deletion_type_undefined'
    cancel = 'cancel'
    transfer_to_direct = 'transfer_to_direct'


class ChangePlanRequest(BaseModel):
    dealCode: Optional[str] = Field(
        None,
        description='Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `changePlan` request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply.',
    )
    kind: Optional[str] = Field(
        'subscriptions#changePlanRequest',
        description='Identifies the resource as a subscription change plan request. Value: `subscriptions#changePlanRequest`',
    )
    planName: Optional[str] = Field(
        None,
        description="The `planName` property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` - The annual commitment plan with monthly payments *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` - The annual commitment plan with yearly payments - `FLEXIBLE` - The flexible plan - `TRIAL` - The 30-day free trial plan ",
    )
    purchaseOrderId: Optional[str] = Field(
        None,
        description='This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.',
    )
    seats: Optional[Seats] = Field(
        None,
        description='This is a required property. The seats property is the number of user seat licenses.',
    )


class Customer(BaseModel):
    alternateEmail: Optional[str] = Field(
        None,
        description='Like the "Customer email" in the reseller tools, this email is the secondary contact used if something happens to the customer\'s service such as service outage or a security issue. This property is required when creating a new "domain" customer and should not use the same domain as `customerDomain`. The `alternateEmail` field is not necessary to create a "team" customer.',
    )
    customerDomain: Optional[str] = Field(
        None,
        description="The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer.",
    )
    customerDomainVerified: Optional[bool] = Field(
        None, description="Whether the customer's primary domain has been verified."
    )
    customerId: Optional[str] = Field(
        None,
        description='This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.',
    )
    customerType: Optional[CustomerType] = Field(
        None,
        description='Identifies the type of the customer. Acceptable values include: * `domain`: Implies a domain-verified customer (default). * `team`: Implies an email-verified customer. For more information, see [managed teams](https://support.google.com/a/users/answer/9939479).',
    )
    kind: Optional[str] = Field(
        'reseller#customer',
        description='Identifies the resource as a customer. Value: `reseller#customer`',
    )
    phoneNumber: Optional[str] = Field(
        None,
        description='Customer contact phone number. Must start with "+" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, "123". This field is silently ignored if invalid.',
    )
    postalAddress: Optional[Address] = Field(
        None,
        description="A customer's address information. Each field has a limit of 255 charcters.",
    )
    primaryAdmin: Optional[PrimaryAdmin] = Field(
        None,
        description='The first admin details of the customer, present in case of TEAM customer.',
    )
    resourceUiUrl: Optional[str] = Field(
        None,
        description="URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console.",
    )
